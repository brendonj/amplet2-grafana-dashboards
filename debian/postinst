#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # create the postgres database user if required - apparently
        # grafana won't do ident authentication, so add a password
        su postgres -c "psql -tAc \
            \"SELECT 1 FROM pg_roles WHERE rolname='grafana'\" | grep -q 1 || psql -tAc \"CREATE USER grafana PASSWORD 'grafana'\""

        # and make sure the grafana user can read the ampmeta database
        su postgres -c "psql -d ampmeta -q -c \
            \"GRANT SELECT ON ALL TABLES IN SCHEMA public TO \\\"grafana\\\";\" || true"

	# restart grafana so it picks up the new dashboards
	if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
            invoke-rc.d grafana-server restart || exit $?
        else
            /etc/init.d/grafana-server restart || exit $?
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
